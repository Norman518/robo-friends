{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","components/Header.js","containers/App.js","actions.js","constants.js","reducers.js","index.js"],"names":["Card","_ref","name","email","id","react_default","a","createElement","className","alt","src","concat","CardList","robots","map","user","i","components_Card","key","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","Component","Header","nextProps","nextState","App","onRequestRobots","_this$props","searchField","onSearchChange","isPending","filteredRobots","filter","robot","toLowerCase","includes","components_Header","components_SearchBox","components_Scroll","components_ErrorBoundary","components_CardList","connect","searchRobots","requestRobots","dispatch","event","payload","target","value","fetch","then","response","json","data","catch","initalStateSearch","initalStateRobots","logger","createLogger","rootReducer","combineReducers","arguments","length","undefined","action","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","es","src_containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.661fe405.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Card = ({ name, email, id }) => {\r\n  return (\r\n    <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n      <img alt=\"robot img\" src={`https://robohash.org/${id}200x200`} />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst CardList = ({ robots }) => {\r\n  return (\r\n    <div>\r\n      {robots.map((user, i) => {\r\n        return (\r\n          <Card\r\n            key={robots[i].id}\r\n            id={robots[i].id}\r\n            name={robots[i].name}\r\n            email={robots[i].email}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n  return (\r\n    <div className=\"pa2\">\r\n      <input\r\n        className=\"pa3 ba b--green bg-lightest-blue\"\r\n        type=\"search\"\r\n        placeholder=\"Search Robots\"\r\n        onChange={searchChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\r\n\r\n\r\n\r\nconst Scroll = (props) => {\r\n    return (<div style ={{overflowY: 'scroll', border: '5px solid black', height: '800px'}}>\r\n        {props.children}\r\n    </div>)\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from \"react\";\r\n\r\nclass ErrorBoundary extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false\r\n    };\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1>An error has occured!</h1>;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Header extends Component {\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return false;\r\n  }\r\n  render() {\r\n    return <h1 className=\"f1\">RoboFriends</h1>;\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport CardList from \"../components/CardList\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport Scroll from \"../components/Scroll\";\r\nimport ErrorBoundary from \"../components/ErrorBoundary\";\r\nimport \"./App.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { setSearchField, requestRobots } from \"../actions\";\r\nimport Header from \"../components/Header\";\r\nconst mapStateToProps = state => {\r\n  return {\r\n    searchField: state.searchRobots.searchField,\r\n    robots: state.requestRobots.robots,\r\n    isPending: state.requestRobots.isPending,\r\n    error: state.requestRobots.error\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSearchChange: event => dispatch(setSearchField(event.target.value)),\r\n    onRequestRobots: () => dispatch(requestRobots())\r\n  };\r\n};\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onRequestRobots();\r\n  }\r\n\r\n  render() {\r\n    const { searchField, onSearchChange, robots, isPending } = this.props;\r\n    const filteredRobots = robots.filter(robot => {\r\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n    });\r\n    return isPending ? (\r\n      <h1>Loading...</h1>\r\n    ) : (\r\n      <div className=\"tc\">\r\n        <Header />\r\n        <SearchBox searchChange={onSearchChange} />\r\n        <Scroll>\r\n          <ErrorBoundary>\r\n            <CardList robots={filteredRobots} />\r\n          </ErrorBoundary>\r\n        </Scroll>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App);\r\n","import {\r\n  CHANGE_SEARCH_FIELD,\r\n  REQUEST_ROBOTS_PENDING,\r\n  REQUEST_ROBOTS_SUCCESS,\r\n  REQUEST_ROBOTS_FAILED\r\n} from \"./constants\";\r\n\r\nexport const setSearchField = text => ({\r\n  type: CHANGE_SEARCH_FIELD,\r\n  payload: text\r\n});\r\nexport const requestRobots = () => dispatch => {\r\n  dispatch({ type: REQUEST_ROBOTS_PENDING });\r\n  fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n    .then(response => response.json())\r\n    .then(data => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data }))\r\n    .catch(error => dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error }));\r\n};\r\n","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD'\r\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING'\r\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS'\r\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED'","import {\r\n  CHANGE_SEARCH_FIELD,\r\n  REQUEST_ROBOTS_PENDING,\r\n  REQUEST_ROBOTS_SUCCESS,\r\n  REQUEST_ROBOTS_FAILED\r\n} from \"./constants\";\r\n\r\nconst initalStateSearch = { searchField: \"\" };\r\n\r\nexport const searchRobots = (state = initalStateSearch, action = {}) => {\r\n  switch (action.type) {\r\n    case CHANGE_SEARCH_FIELD:\r\n      return Object.assign({}, state, { searchField: action.payload });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initalStateRobots = {\r\n  isPending: false,\r\n  robots: [],\r\n  error: \"\"\r\n};\r\n\r\nexport const requestRobots = (state = initalStateRobots, action = {}) => {\r\n  switch (action.type) {\r\n    case REQUEST_ROBOTS_PENDING:\r\n      return Object.assign({}, state, { isPending: true });\r\n    case REQUEST_ROBOTS_SUCCESS:\r\n      return Object.assign({}, state, {\r\n        robots: action.payload,\r\n        isPending: false\r\n      });\r\n    case REQUEST_ROBOTS_FAILED:\r\n      return Object.assign({}, state, {\r\n        error: action.payload,\r\n        isPending: false\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"tachyons\";\r\nimport App from \"./containers/App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport { searchRobots, requestRobots } from \"./reducers\";\r\nimport { createLogger } from \"redux-logger\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nconst logger = createLogger();\r\nconst rootReducer = combineReducers({ searchRobots, requestRobots });\r\nconst store = createStore(\r\n  rootReducer,\r\n  applyMiddleware(thunkMiddleware, logger)\r\n);\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}